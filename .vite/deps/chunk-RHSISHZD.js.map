{
  "version": 3,
  "sources": ["../../node_modules/typed-signals/dist/Collector.js", "../../node_modules/typed-signals/dist/CollectorArray.js", "../../node_modules/typed-signals/dist/CollectorLast.js", "../../node_modules/typed-signals/dist/CollectorUntil0.js", "../../node_modules/typed-signals/dist/CollectorWhile0.js", "../../node_modules/typed-signals/dist/SignalConnection.js", "../../node_modules/typed-signals/dist/SignalLink.js", "../../node_modules/typed-signals/dist/Signal.js", "../../node_modules/typed-signals/dist/SignalConnections.js", "../../node_modules/typed-signals/dist/index.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collector = void 0;\n/**\n * Base class for collectors.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass Collector {\n    /**\n     * Create a new collector.\n     *\n     * @param signal The signal to emit.\n     */\n    constructor(signal) {\n        // eslint-disable-next-line dot-notation\n        this.emit = (...args) => {\n            // eslint-disable-next-line dot-notation\n            signal[\"emitCollecting\"](this, args);\n        };\n    }\n}\nexports.Collector = Collector;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorArray = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Returns the result of the all signal handlers from a signal emission in an array.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorArray extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = [];\n    }\n    handleResult(result) {\n        this.result.push(result);\n        return true;\n    }\n    /**\n     * Get the list of results from the signal handlers.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result.length = 0;\n    }\n}\nexports.CollectorArray = CollectorArray;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorLast = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Returns the result of the last signal handler from a signal emission.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorLast extends Collector_1.Collector {\n    handleResult(result) {\n        this.result = result;\n        return true;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        delete this.result;\n    }\n}\nexports.CollectorLast = CollectorLast;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorUntil0 = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Keep signal emissions going while all handlers return true.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorUntil0 extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = false;\n    }\n    handleResult(result) {\n        this.result = result;\n        return this.result;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result = false;\n    }\n}\nexports.CollectorUntil0 = CollectorUntil0;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorWhile0 = void 0;\nconst Collector_1 = require(\"./Collector\");\n/**\n * Keep signal emissions going while all handlers return false.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass CollectorWhile0 extends Collector_1.Collector {\n    constructor() {\n        super(...arguments);\n        this.result = false;\n    }\n    handleResult(result) {\n        this.result = result;\n        return !this.result;\n    }\n    /**\n     * Get the result of the last signal handler.\n     */\n    getResult() {\n        return this.result;\n    }\n    /**\n     * Reset the result\n     */\n    reset() {\n        this.result = false;\n    }\n}\nexports.CollectorWhile0 = CollectorWhile0;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnectionImpl = void 0;\n/**\n * Implementation of SignalConnection, for internal use only.\n * @private\n */\nclass SignalConnectionImpl {\n    /**\n     * @param link The actual link of the connection.\n     * @param parentCleanup Callback to cleanup the parent signal when a connection is disconnected\n     */\n    constructor(link, parentCleanup) {\n        this.link = link;\n        this.parentCleanup = parentCleanup;\n    }\n    disconnect() {\n        if (this.link !== null) {\n            this.link.unlink();\n            this.link = null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.parentCleanup();\n            this.parentCleanup = null;\n            return true;\n        }\n        return false;\n    }\n    set enabled(enable) {\n        if (this.link)\n            this.link.setEnabled(enable);\n    }\n    get enabled() {\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        return this.link !== null && this.link.isEnabled();\n    }\n}\nexports.SignalConnectionImpl = SignalConnectionImpl;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalLink = void 0;\n/**\n * SignalLink implements a doubly-linked ring with nodes containing the signal handlers.\n * @private\n */\nclass SignalLink {\n    constructor(prev = null, next = null, order = 0) {\n        this.enabled = true;\n        this.newLink = false;\n        this.callback = null;\n        this.prev = prev !== null && prev !== void 0 ? prev : this;\n        this.next = next !== null && next !== void 0 ? next : this;\n        this.order = order;\n    }\n    isEnabled() {\n        return this.enabled && !this.newLink;\n    }\n    setEnabled(flag) {\n        this.enabled = flag;\n    }\n    unlink() {\n        this.callback = null;\n        this.next.prev = this.prev;\n        this.prev.next = this.next;\n    }\n    insert(callback, order) {\n        let after = this.prev;\n        while (after !== this) {\n            if (after.order <= order)\n                break;\n            after = after.prev;\n        }\n        const link = new SignalLink(after, after.next, order);\n        link.callback = callback;\n        after.next = link;\n        link.next.prev = link;\n        return link;\n    }\n}\nexports.SignalLink = SignalLink;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signal = void 0;\nconst SignalConnection_1 = require(\"./SignalConnection\");\nconst SignalLink_1 = require(\"./SignalLink\");\n/**\n * A signal is a way to publish and subscribe to events.\n *\n * @typeparam THandler The function signature to be implemented by handlers.\n */\nclass Signal {\n    constructor() {\n        this.head = new SignalLink_1.SignalLink();\n        this.hasNewLinks = false;\n        this.emitDepth = 0;\n        this.connectionsCount = 0;\n    }\n    /**\n     * @returns The number of connections on this signal.\n     */\n    getConnectionsCount() {\n        return this.connectionsCount;\n    }\n    /**\n     * @returns true if this signal has connections.\n     */\n    hasConnections() {\n        return this.connectionsCount > 0;\n    }\n    /**\n     * Subscribe to this signal.\n     *\n     * @param callback This callback will be run when emit() is called.\n     * @param order Handlers with a higher order value will be called later.\n     */\n    connect(callback, order = 0) {\n        this.connectionsCount++;\n        const link = this.head.insert(callback, order);\n        if (this.emitDepth > 0) {\n            this.hasNewLinks = true;\n            link.newLink = true;\n        }\n        return new SignalConnection_1.SignalConnectionImpl(link, () => this.decrementConnectionCount());\n    }\n    decrementConnectionCount() {\n        this.connectionsCount--;\n    }\n    /**\n     * Unsubscribe from this signal with the original callback instance.\n     * While you can use this method, the SignalConnection returned by connect() will not be updated!\n     *\n     * @param callback The callback you passed to connect().\n     */\n    disconnect(callback) {\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.callback === callback) {\n                this.decrementConnectionCount();\n                link.unlink();\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Disconnect all handlers from this signal event.\n     */\n    disconnectAll() {\n        while (this.head.next !== this.head) {\n            this.head.next.unlink();\n        }\n        this.connectionsCount = 0;\n    }\n    /**\n     * Publish this signal event (call all handlers).\n     */\n    emit(...args) {\n        this.emitDepth++;\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.isEnabled() && link.callback)\n                link.callback.apply(null, args);\n        }\n        this.emitDepth--;\n        this.unsetNewLink();\n    }\n    emitCollecting(collector, args) {\n        this.emitDepth++;\n        for (let link = this.head.next; link !== this.head; link = link.next) {\n            if (link.isEnabled() && link.callback) {\n                const result = link.callback.apply(null, args);\n                if (!collector.handleResult(result))\n                    break;\n            }\n        }\n        this.emitDepth--;\n        this.unsetNewLink();\n    }\n    unsetNewLink() {\n        if (this.hasNewLinks && this.emitDepth === 0) {\n            for (let link = this.head.next; link !== this.head; link = link.next)\n                link.newLink = false;\n            this.hasNewLinks = false;\n        }\n    }\n}\nexports.Signal = Signal;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnections = void 0;\n/**\n * Represents a list of connections to a signal for easy disconnect.\n */\nclass SignalConnections {\n    constructor() {\n        this.list = [];\n    }\n    /**\n     * Add a connection to the list.\n     * @param connection\n     */\n    add(connection) {\n        this.list.push(connection);\n    }\n    /**\n     * Disconnect all connections in the list and empty the list.\n     */\n    disconnectAll() {\n        for (const connection of this.list) {\n            connection.disconnect();\n        }\n        this.list = [];\n    }\n    /**\n     * @returns The number of connections in this list.\n     */\n    getCount() {\n        return this.list.length;\n    }\n    /**\n     * @returns true if this list is empty.\n     */\n    isEmpty() {\n        return this.list.length === 0;\n    }\n}\nexports.SignalConnections = SignalConnections;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalConnections = exports.Signal = exports.CollectorWhile0 = exports.CollectorUntil0 = exports.CollectorLast = exports.CollectorArray = exports.Collector = void 0;\nvar Collector_1 = require(\"./Collector\");\nObject.defineProperty(exports, \"Collector\", { enumerable: true, get: function () { return Collector_1.Collector; } });\nvar CollectorArray_1 = require(\"./CollectorArray\");\nObject.defineProperty(exports, \"CollectorArray\", { enumerable: true, get: function () { return CollectorArray_1.CollectorArray; } });\nvar CollectorLast_1 = require(\"./CollectorLast\");\nObject.defineProperty(exports, \"CollectorLast\", { enumerable: true, get: function () { return CollectorLast_1.CollectorLast; } });\nvar CollectorUntil0_1 = require(\"./CollectorUntil0\");\nObject.defineProperty(exports, \"CollectorUntil0\", { enumerable: true, get: function () { return CollectorUntil0_1.CollectorUntil0; } });\nvar CollectorWhile0_1 = require(\"./CollectorWhile0\");\nObject.defineProperty(exports, \"CollectorWhile0\", { enumerable: true, get: function () { return CollectorWhile0_1.CollectorWhile0; } });\nvar Signal_1 = require(\"./Signal\");\nObject.defineProperty(exports, \"Signal\", { enumerable: true, get: function () { return Signal_1.Signal; } });\nvar SignalConnections_1 = require(\"./SignalConnections\");\nObject.defineProperty(exports, \"SignalConnections\", { enumerable: true, get: function () { return SignalConnections_1.SignalConnections; } });\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,YAAY;AAMpB,QAAM,YAAN,MAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMZ,YAAY,QAAQ;AAEhB,aAAK,OAAO,IAAI,SAAS;AAErB,iBAAO,gBAAgB,EAAE,MAAM,IAAI;AAAA,QACvC;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,YAAY;AAAA;AAAA;;;ACtBpB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,iBAAiB;AACzB,QAAM,cAAc;AAMpB,QAAM,iBAAN,cAA6B,YAAY,UAAU;AAAA,MAC/C,cAAc;AACV,cAAM,GAAG,SAAS;AAClB,aAAK,SAAS,CAAC;AAAA,MACnB;AAAA,MACA,aAAa,QAAQ;AACjB,aAAK,OAAO,KAAK,MAAM;AACvB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ;AACJ,aAAK,OAAO,SAAS;AAAA,MACzB;AAAA,IACJ;AACA,YAAQ,iBAAiB;AAAA;AAAA;;;AC/BzB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,gBAAgB;AACxB,QAAM,cAAc;AAMpB,QAAM,gBAAN,cAA4B,YAAY,UAAU;AAAA,MAC9C,aAAa,QAAQ;AACjB,aAAK,SAAS;AACd,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ;AACJ,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AACA,YAAQ,gBAAgB;AAAA;AAAA;;;AC3BxB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,kBAAkB;AAC1B,QAAM,cAAc;AAMpB,QAAM,kBAAN,cAA8B,YAAY,UAAU;AAAA,MAChD,cAAc;AACV,cAAM,GAAG,SAAS;AAClB,aAAK,SAAS;AAAA,MAClB;AAAA,MACA,aAAa,QAAQ;AACjB,aAAK,SAAS;AACd,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA,MAIA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ;AACJ,aAAK,SAAS;AAAA,MAClB;AAAA,IACJ;AACA,YAAQ,kBAAkB;AAAA;AAAA;;;AC/B1B;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,kBAAkB;AAC1B,QAAM,cAAc;AAMpB,QAAM,kBAAN,cAA8B,YAAY,UAAU;AAAA,MAChD,cAAc;AACV,cAAM,GAAG,SAAS;AAClB,aAAK,SAAS;AAAA,MAClB;AAAA,MACA,aAAa,QAAQ;AACjB,aAAK,SAAS;AACd,eAAO,CAAC,KAAK;AAAA,MACjB;AAAA;AAAA;AAAA;AAAA,MAIA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ;AACJ,aAAK,SAAS;AAAA,MAClB;AAAA,IACJ;AACA,YAAQ,kBAAkB;AAAA;AAAA;;;AC/B1B;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,uBAAuB;AAK/B,QAAM,uBAAN,MAA2B;AAAA;AAAA;AAAA;AAAA;AAAA,MAKvB,YAAY,MAAM,eAAe;AAC7B,aAAK,OAAO;AACZ,aAAK,gBAAgB;AAAA,MACzB;AAAA,MACA,aAAa;AACT,YAAI,KAAK,SAAS,MAAM;AACpB,eAAK,KAAK,OAAO;AACjB,eAAK,OAAO;AAEZ,eAAK,cAAc;AACnB,eAAK,gBAAgB;AACrB,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MACA,IAAI,QAAQ,QAAQ;AAChB,YAAI,KAAK;AACL,eAAK,KAAK,WAAW,MAAM;AAAA,MACnC;AAAA,MACA,IAAI,UAAU;AAEV,eAAO,KAAK,SAAS,QAAQ,KAAK,KAAK,UAAU;AAAA,MACrD;AAAA,IACJ;AACA,YAAQ,uBAAuB;AAAA;AAAA;;;ACpC/B;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,aAAa;AAKrB,QAAM,aAAN,MAAM,YAAW;AAAA,MACb,YAAY,OAAO,MAAM,OAAO,MAAM,QAAQ,GAAG;AAC7C,aAAK,UAAU;AACf,aAAK,UAAU;AACf,aAAK,WAAW;AAChB,aAAK,OAAO,SAAS,QAAQ,SAAS,SAAS,OAAO;AACtD,aAAK,OAAO,SAAS,QAAQ,SAAS,SAAS,OAAO;AACtD,aAAK,QAAQ;AAAA,MACjB;AAAA,MACA,YAAY;AACR,eAAO,KAAK,WAAW,CAAC,KAAK;AAAA,MACjC;AAAA,MACA,WAAW,MAAM;AACb,aAAK,UAAU;AAAA,MACnB;AAAA,MACA,SAAS;AACL,aAAK,WAAW;AAChB,aAAK,KAAK,OAAO,KAAK;AACtB,aAAK,KAAK,OAAO,KAAK;AAAA,MAC1B;AAAA,MACA,OAAO,UAAU,OAAO;AACpB,YAAI,QAAQ,KAAK;AACjB,eAAO,UAAU,MAAM;AACnB,cAAI,MAAM,SAAS;AACf;AACJ,kBAAQ,MAAM;AAAA,QAClB;AACA,cAAM,OAAO,IAAI,YAAW,OAAO,MAAM,MAAM,KAAK;AACpD,aAAK,WAAW;AAChB,cAAM,OAAO;AACb,aAAK,KAAK,OAAO;AACjB,eAAO;AAAA,MACX;AAAA,IACJ;AACA,YAAQ,aAAa;AAAA;AAAA;;;ACzCrB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,SAAS;AACjB,QAAM,qBAAqB;AAC3B,QAAM,eAAe;AAMrB,QAAM,SAAN,MAAa;AAAA,MACT,cAAc;AACV,aAAK,OAAO,IAAI,aAAa,WAAW;AACxC,aAAK,cAAc;AACnB,aAAK,YAAY;AACjB,aAAK,mBAAmB;AAAA,MAC5B;AAAA;AAAA;AAAA;AAAA,MAIA,sBAAsB;AAClB,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA,MAIA,iBAAiB;AACb,eAAO,KAAK,mBAAmB;AAAA,MACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,QAAQ,UAAU,QAAQ,GAAG;AACzB,aAAK;AACL,cAAM,OAAO,KAAK,KAAK,OAAO,UAAU,KAAK;AAC7C,YAAI,KAAK,YAAY,GAAG;AACpB,eAAK,cAAc;AACnB,eAAK,UAAU;AAAA,QACnB;AACA,eAAO,IAAI,mBAAmB,qBAAqB,MAAM,MAAM,KAAK,yBAAyB,CAAC;AAAA,MAClG;AAAA,MACA,2BAA2B;AACvB,aAAK;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,WAAW,UAAU;AACjB,iBAAS,OAAO,KAAK,KAAK,MAAM,SAAS,KAAK,MAAM,OAAO,KAAK,MAAM;AAClE,cAAI,KAAK,aAAa,UAAU;AAC5B,iBAAK,yBAAyB;AAC9B,iBAAK,OAAO;AACZ,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,gBAAgB;AACZ,eAAO,KAAK,KAAK,SAAS,KAAK,MAAM;AACjC,eAAK,KAAK,KAAK,OAAO;AAAA,QAC1B;AACA,aAAK,mBAAmB;AAAA,MAC5B;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ,MAAM;AACV,aAAK;AACL,iBAAS,OAAO,KAAK,KAAK,MAAM,SAAS,KAAK,MAAM,OAAO,KAAK,MAAM;AAClE,cAAI,KAAK,UAAU,KAAK,KAAK;AACzB,iBAAK,SAAS,MAAM,MAAM,IAAI;AAAA,QACtC;AACA,aAAK;AACL,aAAK,aAAa;AAAA,MACtB;AAAA,MACA,eAAe,WAAW,MAAM;AAC5B,aAAK;AACL,iBAAS,OAAO,KAAK,KAAK,MAAM,SAAS,KAAK,MAAM,OAAO,KAAK,MAAM;AAClE,cAAI,KAAK,UAAU,KAAK,KAAK,UAAU;AACnC,kBAAM,SAAS,KAAK,SAAS,MAAM,MAAM,IAAI;AAC7C,gBAAI,CAAC,UAAU,aAAa,MAAM;AAC9B;AAAA,UACR;AAAA,QACJ;AACA,aAAK;AACL,aAAK,aAAa;AAAA,MACtB;AAAA,MACA,eAAe;AACX,YAAI,KAAK,eAAe,KAAK,cAAc,GAAG;AAC1C,mBAAS,OAAO,KAAK,KAAK,MAAM,SAAS,KAAK,MAAM,OAAO,KAAK;AAC5D,iBAAK,UAAU;AACnB,eAAK,cAAc;AAAA,QACvB;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,SAAS;AAAA;AAAA;;;ACxGjB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,oBAAoB;AAI5B,QAAM,oBAAN,MAAwB;AAAA,MACpB,cAAc;AACV,aAAK,OAAO,CAAC;AAAA,MACjB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,IAAI,YAAY;AACZ,aAAK,KAAK,KAAK,UAAU;AAAA,MAC7B;AAAA;AAAA;AAAA;AAAA,MAIA,gBAAgB;AACZ,mBAAW,cAAc,KAAK,MAAM;AAChC,qBAAW,WAAW;AAAA,QAC1B;AACA,aAAK,OAAO,CAAC;AAAA,MACjB;AAAA;AAAA;AAAA;AAAA,MAIA,WAAW;AACP,eAAO,KAAK,KAAK;AAAA,MACrB;AAAA;AAAA;AAAA;AAAA,MAIA,UAAU;AACN,eAAO,KAAK,KAAK,WAAW;AAAA,MAChC;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAAA;AAAA;;;ACvC5B;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,oBAAoB,QAAQ,SAAS,QAAQ,kBAAkB,QAAQ,kBAAkB,QAAQ,gBAAgB,QAAQ,iBAAiB,QAAQ,YAAY;AACtK,QAAI,cAAc;AAClB,WAAO,eAAe,SAAS,aAAa,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,YAAY;AAAA,IAAW,EAAE,CAAC;AACpH,QAAI,mBAAmB;AACvB,WAAO,eAAe,SAAS,kBAAkB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,iBAAiB;AAAA,IAAgB,EAAE,CAAC;AACnI,QAAI,kBAAkB;AACtB,WAAO,eAAe,SAAS,iBAAiB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,gBAAgB;AAAA,IAAe,EAAE,CAAC;AAChI,QAAI,oBAAoB;AACxB,WAAO,eAAe,SAAS,mBAAmB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,kBAAkB;AAAA,IAAiB,EAAE,CAAC;AACtI,QAAI,oBAAoB;AACxB,WAAO,eAAe,SAAS,mBAAmB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,kBAAkB;AAAA,IAAiB,EAAE,CAAC;AACtI,QAAI,WAAW;AACf,WAAO,eAAe,SAAS,UAAU,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,SAAS;AAAA,IAAQ,EAAE,CAAC;AAC3G,QAAI,sBAAsB;AAC1B,WAAO,eAAe,SAAS,qBAAqB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,oBAAoB;AAAA,IAAmB,EAAE,CAAC;AAAA;AAAA;",
  "names": []
}
